/**
 * @license
 * Copyright 2021 Google LLC
 * SPDX-License-Identifier: Apache-2.0
 */

/**
 * @fileoverview Collected information about modules and module
 * exports that have been renamed between versions.
 */

/* eslint-disable */

{
  // Example entry:
  'version.that.includes.the.rename': [
    // Each entry in the array is a module.
    // All of the properties are optional.
    {
      // The name that the module had before this version.
      oldName: 'old.module.name',

      // The name that the module now has in this version.
      newName: 'new.module.name',

      // If a module had a default export and nowhas a named export, the name
      // of the named export can be given here.
      newExport: 'new-name-for-default-export',

      // The old location of this module on the Blockly tree (the mega-object
      // that people access if they are importing all of Blockly). Usually this
      // is the same as the old module name, and doesn't need to be provided.
      oldPath: 'old.path.on.Blockly.tree',

      // The new location of this module on the Blockly tree. To be backwards
      // compatible with people accessing the Blockly tree, this should be the
      // same as the oldPath.
      // If this is not provided, the newPath is assumed to be the newName.
      newPath: 'new.path.on.Blockly.tree',

      // Each entry in this object is the old name of a named export.
      exports: {
        // The name that the export had before this version.
        // All of the properties on this object are optional.
        'old-export-name': {
          // The new module that the export is in in this version.
          // If this is not provided, the newModule is assumed to be the parent
          // module's newName.
          newModule: 'new.module.name',

          // The name that the export now has in this version.
          newExport: 'new-export-name',

          // The old location of this module on the Blockly tree.
          oldPath: 'old.path.on.Blockly.tree',

          // The new location of this module onthe Blockly tree. To be backwards
          // compatible with people accessing the Blockkly tree, this should be
          // the same as the oldPath.
          // If this is not provided, the newPath is assumed to be
          // newModule.newExport
          newPath: 'new.path.on.Blockly.tree',

          // If a named export has been changed to a private variable with a get
          // method, this is the name of the get method.
          getMethod: 'get-method-name',

          // If a named export has been changed to a private variable with a set
          // method, this is the name of the set method.
          setMethod: 'set-method-name'
        }
      }
    }
  ],

  '4.20201217.0': {
    'Blockly': {
      exports: {
        // bind/unbind events functions.  See PR #4642
        EventData: {newModule: 'Blockly.eventHandling', newExport: 'Data'},
        bindEvent_: {newModule: 'Blockly.browserEvents', newExport: 'bind'},
        unbindEvent_: {newModule: 'Blockly.browserEvents', newExport: 'unbind'},
        bindEventWithChecks_: {
          newModule: 'Blockly.browserEvents',
          newExport: 'conditionalBind',
        },
      },
    },
  },
  '6.20210701.0': {
    'Blockly': {
      exports: {
        // Align.
        ALIGN_LEFT: {
          newModule: 'Blockly.Input',
          newExport: 'Align.LEFT',
          newPath: 'Blockly.ALIGN_LEFT',
        },
        ALIGN_CENTRE: {
          newModule: 'Blockly.Input',
          newExport: 'Align.CENTRE',
          newPath: 'Blockly.ALIGN_CENTRE',
        },
        ALIGN_RIGHT: {
          newModule: 'Blockly.Input',
          newExport: 'Align.RIGHT',
          newPath: 'Blockly.ALIGN_RIGHT',
        },
        // Clipboard.  See PR #5237.
        clipboardXml_: {newModule: 'Blockly.clipboard', newExport: 'xml'},
        clipboardSource_: {newModule: 'Blockly.clipboard', newExport: 'source'},
        clipboardTypeCounts_: {
          newModule: 'Blockly.clipboard',
          newExport: 'typeCounts',
        },
        copy: {newModule: 'Blockly.clipboard'},
        paste: {newModule: 'Blockly.clipboard'},
        duplicate: {newModule: 'Blockly.clipboard'},

        // mainWorkspace.  See PR #5244.
        mainWorkspace: {
          newModule: 'Blockly.common',
          getMethod: 'getMainWorkspace',
          setMethod: 'setMainWorkspace',
        },
        getMainWorkspace: {newModule: 'Blockly.common'},

        // parentContainer, draggingConnections.  See PR #5262.
        parentContainer: {
          newModule: 'Blockly.common',
          getMethod: 'getParentContainer',
          setMethod: 'setParentContainer',
        },
        setParentContainer: {newModule: 'Blockly.common'},
        draggingConnections: {newModule: 'Blockly.common'},
        // Dialogs.  See PR #5457.
        alert: {
          newModule: 'Blockly.dialog',
          newExport: 'alert',
          setMethod: 'setAlert',
        },
        confirm: {
          newModule: 'Blockly.dialog',
          newExport: 'confirm',
          setMethod: 'setConfirm',
        },
        prompt: {
          newModule: 'Blockly.dialog',
          newExport: 'prompt',
          setMethod: 'setPrompt',
        },
        // hueToHex.  See PR #5462.
        hueToHex: {newModule: 'Blockly.utils.colour'},
        // Blockly.hideChaff() became
        // Blockly.common.getMainWorkspace().hideChaff().  See PR #5460.

        // selected.  See PR #5489.
        selected: {
          newModule: 'Blockly.common',
          getMethod: 'getSelected',
          setMethod: 'setSelected',
        },
      },
    },
    'Blockly.Blocks': {
      newName: 'Blockly.blocks',
      newExport: 'Blocks',        // Previous default export now named.
      newPath: 'Blockly.Blocks',  // But still on tree with original name.
    },
    'Blockly.ContextMenu': {
      exports: {
        currentBlock: {getMethod: 'getCurrentBlock', setMethod: 'setCurrentBlock'},
      },
    },
    'Blockly.Events': {
      exports: {
        recordUndo: {getMethod: 'getRecordUndo', setMethod: 'setRecordUndo'},
      },
    },
    'Blockly.Tooltip': {
      exports: {
        DIV: {getMethod: 'getDiv', setMethod: 'setDiv'},
        visible: {getMethod: 'isVisible'},
      },
    },
    'Blockly.WidgetDiv': {
      exports: {
        DIV: {getMethod: 'getDiv'},
      },
    },
    'Blockly.connectionTypes': {
      newName: 'Blockly.ConnectionType',
      newExport: 'ConnectionType',        // Previous default export now named.
      newPath: 'Blockly.ConnectionType',  // Type reexported directly.
    },
    'Blockly.utils': {
      exports: {
        genUid: {newModule: 'Blockly.utils.idGenerator'},
        getScrollDelta: {newModule: 'Blockly.utils.browserEvents'},
        isTargetInput: {newModule: 'Blockly.utils.browserEvents'},
        isRightButton: {newModule: 'Blockly.utils.browserEvents'},
        mouseToSvg: {newModule: 'Blockly.utils.browserEvents'},
      },
    },
    'Blockly.utils.global': {
      newExport: 'globalThis',          // Previous default export now named.
      newPath: 'Blockly.utils.global',  // But still exported under original name.
    },
    'Blockly.utils.IdGenerator': {
      newName: 'Blockly.utils.idGenerator',
    },
    'Blockly.utils.xml': {
      exports: {
        // document was a function before, too - not a static property
        // or get accessor.
        document: {newExport: 'getDocument'},
      },
    },
  },
  '7.20211209.0-beta.0': {
    'Blockly.Blocks.colour': {newName: 'Blockly.blocks.colour'},
    // Blockly.Blocks.lists not previously provided.
    'Blockly.Blocks.logic': {newName: 'Blockly.blocks.logic'},
    'Blockly.Blocks.loops': {newName: 'Blockly.blocks.loops'},
    'Blockly.Blocks.math': {newName: 'Blockly.blocks.math'},
    'Blockly.Blocks.procedures': {newName: 'Blockly.blocks.procedures'},
    'Blockly.Blocks.texts': {newName: 'Blockly.blocks.texts'},
    'Blockly.Blocks.variables': {newName: 'Blockly.blocks.variables'},
    // Blockly.Blocks.variablesDynamic not previously provided.
    'Blockly.utils': {
      exports: {
        screenToWsCoordinates: {newModule: 'Blockly.utils.svgMath'},
        getDocumentScroll: {newModule: 'Blockly.utils.svgMath'},
        getViewportBBox: {newModule: 'Blockly.utils.svgMath'},
        is3dSupported: {newModule: 'Blockly.utils.svgMath'},
        getRelativeXY: {newModule: 'Blockly.utils.svgMath'},
        getInjectionDivXY_:
            {newModule: 'Blockly.utils.svgMath', newExport: 'getInjectionDivXY'},
        parseBlockColour: {newModule: 'Blockly.utils.parsing'},
        checkMessageReferences: {newModule: 'Blockly.utils.parsing'},
        replaceMessageReferences: {newModule: 'Blockly.utils.parsing'},
        tokenizeInterpolation: {newModule: 'Blockly.utils.parsing'},
        arrayRemove: {newModule: 'Blockly.utils.array', newExport: 'removeElem'},
        getBlockTypeCounts:
            {newModule: 'Blockly.common', newExport: 'getBlockTypeCounts'},
        runAfterPageLoad:
            {newModule: 'Blockly.Extensions', newExport: 'runAfterPageLoad'},
      },
    },
    'Blockly.Events.Abstract': {
      newExport: 'Abstract',
      newPath: 'Blockly.Events.Abstract',
    },
    'Blockly.Events.BlockBase': {
      newExport: 'BlockBase',
      newPath: 'Blockly.Events.BlockBase',
    },
    'Blockly.Events.BlockChange': {
      newExport: 'BlockChange',
      newPath: 'Blockly.Events.BlockChange',
    },
    'Blockly.Events.BlockCreate': {
      newExport: 'BlockCreate',
      newPath: 'Blockly.Events.BlockCreate',
    },
    'Blockly.Events.BlockDelete': {
      newExport: 'BlockDelete',
      newPath: 'Blockly.Events.BlockDelete',
    },
    'Blockly.Events.BlockDrag': {
      newExport: 'BlockDrag',
      newPath: 'Blockly.Events.BlockDrag',
    },
    'Blockly.Events.BlockMove': {
      newExport: 'BlockMove',
      newPath: 'Blockly.Events.BlockMove',
    },
    'Blockly.Events.BubbleOpen': {
      newExport: 'BubbleOpen',
      newPath: 'Blockly.Events.BubbleOpen',
    },
    'Blockly.Events.Click': {
      newExport: 'Click',
      newPath: 'Blockly.Events.Click',
    },
    'Blockly.Events.CommentBase': {
      newExport: 'CommentBase',
      newPath: 'Blockly.Events.CommentBase',
    },
    'Blockly.Events.CommentChange': {
      newExport: 'CommentChange',
      newPath: 'Blockly.Events.CommentChange',
    },
    'Blockly.Events.CommentCreate': {
      newExport: 'CommentCreate',
      newPath: 'Blockly.Events.CommentCreate',
    },
    'Blockly.Events.CommentDelete': {
      newExport: 'CommentDelete',
      newPath: 'Blockly.Events.CommentDelete',
    },
    'Blockly.Events.CommentMove': {
      newExport: 'CommentMove',
      newPath: 'Blockly.Events.CommentMove',
    },
    'Blockly.Events.MarkerMove': {
      newExport: 'MarkerMove',
      newPath: 'Blockly.Events.MarkerMove',
    },
    'Blockly.Events.Selected': {
      newExport: 'Selected',
      newPath: 'Blockly.Events.Selected',
    },
    'Blockly.Events.ThemeChange': {
      newExport: 'ThemeChange',
      newPath: 'Blockly.Events.ThemeChange',
    },
    'Blockly.Events.ToolboxItemSelect': {
      newExport: 'ToolboxItemSelect',
      newPath: 'Blockly.Events.ToolboxItemSelect',
    },
    'Blockly.Events.TrashcanOpen': {
      newExport: 'TrashcanOpen',
      newPath: 'Blockly.Events.TrashcanOpen',
    },
    'Blockly.Events.Ui': {
      newExport: 'Ui',
      newPath: 'Blockly.Events.Ui',
    },
    'Blockly.Events.UiBase': {
      newExport: 'UiBase',
      newPath: 'Blockly.Events.UiBase',
    },
    'Blockly.Events.VarBase': {
      newExport: 'VarBase',
      newPath: 'Blockly.Events.VarBase',
    },
    'Blockly.Events.VarCreate': {
      newExport: 'VarCreate',
      newPath: 'Blockly.Events.VarCreate',
    },
    'Blockly.Events.VarDelete': {
      newExport: 'VarDelete',
      newPath: 'Blockly.Events.VarDelete',
    },
    'Blockly.Events.VarRename': {
      newExport: 'VarRename',
      newPath: 'Blockly.Events.VarRename',
    },
    'Blockly.Events.ViewportChange': {
      newExport: 'ViewportChange',
      newPath: 'Blockly.Events.ViewportChange',
    },
    'Blockly.Events.FinishedLoading': {
      newExport: 'FinishedLoading',
      newPath: 'Blockly.Events.FinishedLoading',
    },
    'Blockly.IASTNodeLocation': {
      newExport: 'IASTNodeLocation',
      newPath: 'Blockly.IASTNodeLocation',
    },
    'Blockly.IASTNodeLocationSvg': {
      newExport: 'IASTNodeLocationSvg',
      newPath: 'Blockly.IASTNodeLocationSvg',
    },
    'Blockly.IASTNodeLocationWithBlock': {
      newExport: 'IASTNodeLocationWithBlock',
      newPath: 'Blockly.IASTNodeLocationWithBlock',
    },
    'Blockly.IAutoHideable': {
      newExport: 'IAutoHideable',
      newPath: 'Blockly.IAutoHideable',
    },
    'Blockly.IBlockDragger': {
      newExport: 'IBlockDragger',
      newPath: 'Blockly.IBlockDragger',
    },
    'Blockly.IBoundedElement': {
      newExport: 'IBoundedElement',
      newPath: 'Blockly.IBoundedElement',
    },
    'Blockly.IBubble': {
      newExport: 'IBubble',
      newPath: 'Blockly.IBubble',
    },
    'Blockly.ICollapsibleToolboxItem': {
      newExport: 'ICollapsibleToolboxItem',
      newPath: 'Blockly.ICollapsibleToolboxItem',
    },
    'Blockly.IComponent': {
      newExport: 'IComponent',
      newPath: 'Blockly.IComponent',
    },
    'Blockly.IConnectionChecker': {
      newExport: 'IConnectionChecker',
      newPath: 'Blockly.IConnectionChecker',
    },
    'Blockly.IContextMenu': {
      newExport: 'IContextMenu',
      newPath: 'Blockly.IContextMenu',
    },
    'Blockly.ICopyable': {
      newExport: 'ICopyable',
      newPath: 'Blockly.ICopyable',
    },
    'Blockly.IDeletable': {
      newExport: 'IDeletable',
      newPath: 'Blockly.IDeletable',
    },
    'Blockly.IDeleteArea': {
      newExport: 'IDeleteArea',
      newPath: 'Blockly.IDeleteArea',
    },
    'Blockly.IDragTarget': {
      newExport: 'IDragTarget',
      newPath: 'Blockly.IDragTarget',
    },
    'Blockly.IDraggable': {
      newExport: 'IDraggable',
      newPath: 'Blockly.IDraggable',
    },
    'Blockly.IFlyout': {
      newExport: 'IFlyout',
      newPath: 'Blockly.IFlyout',
    },
    'Blockly.IKeyboardAccessible': {
      newExport: 'IKeyboardAccessible',
      newPath: 'Blockly.IKeyboardAccessible',
    },
    'Blockly.IMetricsManager': {
      newExport: 'IMetricsManager',
      newPath: 'Blockly.IMetricsManager',
    },
    'Blockly.IMovable': {
      newExport: 'IMovable',
      newPath: 'Blockly.IMovable',
    },
    'Blockly.IPositionable': {
      newExport: 'IPositionable',
      newPath: 'Blockly.IPositionable',
    },
    'Blockly.IRegistrable': {
      newExport: 'IRegistrable',
      newPath: 'Blockly.IRegistrable',
    },
    'Blockly.IRegistrableField': {
      newExport: 'IRegistrableField',
      newPath: 'Blockly.IRegistrableField',
    },
    'Blockly.ISelectable': {
      newExport: 'ISelectable',
      newPath: 'Blockly.ISelectable',
    },
    'Blockly.ISelectableToolboxItem': {
      newExport: 'ISelectableToolboxItem',
      newPath: 'Blockly.ISelectableToolboxItem',
    },
    'Blockly.IStyleable': {
      newExport: 'IStyleable',
      newPath: 'Blockly.IStyleable',
    },
    'Blockly.IToolbox': {
      newExport: 'IToolbox',
      newPath: 'Blockly.IToolbox',
    },
    'Blockly.IToolboxItem': {
      newExport: 'IToolboxItem',
      newPath: 'Blockly.IToolboxItem',
    },
    'Blockly.blockRendering.ConstantProvider': {
      newExport: 'ConstantProvider',
      newPath: 'Blockly.blockRendering.ConstantProvider',
    },
    'Blockly.blockRendering.Debug': {
      newExport: 'Debug',
      newPath: 'Blockly.blockRendering.Debug',
    },
    'Blockly.blockRendering.Drawer': {
      newExport: 'Drawer',
      newPath: 'Blockly.blockRendering.Drawer',
    },
    'Blockly.blockRendering.IPathObject': {
      newExport: 'IPathObject',
      newPath: 'Blockly.blockRendering.IPathObject',
    },
    'Blockly.blockRendering.RenderInfo': {
      newExport: 'RenderInfo',
      newPath: 'Blockly.blockRendering.RenderInfo',
    },
    'Blockly.blockRendering.MarkerSvg': {
      newExport: 'MarkerSvg',
      newPath: 'Blockly.blockRendering.MarkerSvg',
    },
    'Blockly.blockRendering.PathObject': {
      newExport: 'PathObject',
      newPath: 'Blockly.blockRendering.PathObject',
    },
    'Blockly.blockRendering.Renderer': {
      newExport: 'Renderer',
      newPath: 'Blockly.blockRendering.Renderer',
    },
    'Blockly.geras.InlineInput': {
      newExport: 'InlineInput',
      newPath: 'Blockly.geras.InlineInput',
    },
    'Blockly.geras.StatementInput': {
      newExport: 'StatementInput',
      newPath: 'Blockly.geras.StatementInput',
    },
    'Blockly.geras.ConstantProvider': {
      newExport: 'ConstantProvider',
      newPath: 'Blockly.geras.ConstantProvider',
    },
    'Blockly.geras.Drawer': {
      newExport: 'Drawer',
      newPath: 'Blockly.geras.Drawer',
    },
    'Blockly.geras.HighlightConstantProvider': {
      newExport: 'HighlightConstantProvider',
      newPath: 'Blockly.geras.HighlightConstantProvider',
    },
    'Blockly.geras.Highlighter': {
      newExport: 'Highlighter',
      newPath: 'Blockly.geras.Highlighter',
    },
    'Blockly.geras.RenderInfo': {
      newExport: 'RenderInfo',
      newPath: 'Blockly.geras.RenderInfo',
    },
    'Blockly.geras.PathObject': {
      newExport: 'PathObject',
      newPath: 'Blockly.geras.PathObject',
    },
    'Blockly.geras.Renderer': {
      newExport: 'Renderer',
      newPath: 'Blockly.geras.Renderer',
    },
    'Blockly.blockRendering.Measurable': {
      newExport: 'Measurable',
      newPath: 'Blockly.blockRendering.Measurable',
    },
    'Blockly.blockRendering.BottomRow': {
      newExport: 'BottomRow',
      newPath: 'Blockly.blockRendering.BottomRow',
    },
    'Blockly.blockRendering.Connection': {
      newExport: 'Connection',
      newPath: 'Blockly.blockRendering.Connection',
    },
    'Blockly.blockRendering.ExternalValueInput': {
      newExport: 'ExternalValueInput',
      newPath: 'Blockly.blockRendering.ExternalValueInput',
    },
    'Blockly.blockRendering.Field': {
      newExport: 'Field',
      newPath: 'Blockly.blockRendering.Field',
    },
    'Blockly.blockRendering.Hat': {
      newExport: 'Hat',
      newPath: 'Blockly.blockRendering.Hat',
    },
    'Blockly.blockRendering.Icon': {
      newExport: 'Icon',
      newPath: 'Blockly.blockRendering.Icon',
    },
    'Blockly.blockRendering.InRowSpacer': {
      newExport: 'InRowSpacer',
      newPath: 'Blockly.blockRendering.InRowSpacer',
    },
    'Blockly.blockRendering.InlineInput': {
      newExport: 'InlineInput',
      newPath: 'Blockly.blockRendering.InlineInput',
    },
    'Blockly.blockRendering.InputConnection': {
      newExport: 'InputConnection',
      newPath: 'Blockly.blockRendering.InputConnection',
    },
    'Blockly.blockRendering.InputRow': {
      newExport: 'InputRow',
      newPath: 'Blockly.blockRendering.InputRow',
    },
    'Blockly.blockRendering.JaggedEdge': {
      newExport: 'JaggedEdge',
      newPath: 'Blockly.blockRendering.JaggedEdge',
    },
    'Blockly.blockRendering.NextConnection': {
      newExport: 'NextConnection',
      newPath: 'Blockly.blockRendering.NextConnection',
    },
    'Blockly.blockRendering.OutputConnection': {
      newExport: 'OutputConnection',
      newPath: 'Blockly.blockRendering.OutputConnection',
    },
    'Blockly.blockRendering.PreviousConnection': {
      newExport: 'PreviousConnection',
      newPath: 'Blockly.blockRendering.PreviousConnection',
    },
    'Blockly.blockRendering.RoundCorner': {
      newExport: 'RoundCorner',
      newPath: 'Blockly.blockRendering.RoundCorner',
    },
    'Blockly.blockRendering.Row': {
      newExport: 'Row',
      newPath: 'Blockly.blockRendering.Row',
    },
    'Blockly.blockRendering.SpacerRow': {
      newExport: 'SpacerRow',
      newPath: 'Blockly.blockRendering.SpacerRow',
    },
    'Blockly.blockRendering.SquareCorner': {
      newExport: 'SquareCorner',
      newPath: 'Blockly.blockRendering.SquareCorner',
    },
    'Blockly.blockRendering.StatementInput': {
      newExport: 'StatementInput',
      newPath: 'Blockly.blockRendering.StatementInput',
    },
    'Blockly.blockRendering.TopRow': {
      newExport: 'TopRow',
      newPath: 'Blockly.blockRendering.TopRow',
    },
    'Blockly.blockRendering.Types': {
      newExport: 'Types',
      newPath: 'Blockly.blockRendering.Types',
    },
    'Blockly.minimalist.ConstantProvider': {
      newExport: 'ConstantProvider',
      newPath: 'Blockly.minimalist.ConstantProvider',
    },
    'Blockly.minimalist.Drawer': {
      newExport: 'Drawer',
      newPath: 'Blockly.minimalist.Drawer',
    },
    'Blockly.minimalist.RenderInfo': {
      newExport: 'RenderInfo',
      newPath: 'Blockly.minimalist.RenderInfo',
    },
    'Blockly.minimalist.Renderer': {
      newExport: 'Renderer',
      newPath: 'Blockly.minimalist.Renderer',
    },
    'Blockly.thrasos.RenderInfo': {
      newExport: 'RenderInfo',
      newPath: 'Blockly.thrasos.RenderInfo',
    },
    'Blockly.thrasos.Renderer': {
      newExport: 'Renderer',
      newPath: 'Blockly.thrasos.Renderer',
    },
    'Blockly.zelos.BottomRow': {
      newExport: 'BottomRow',
      newPath: 'Blockly.zelos.BottomRow',
    },
    'Blockly.zelos.StatementInput': {
      newExport: 'StatementInput',
      newPath: 'Blockly.zelos.StatementInput',
    },
    'Blockly.zelos.RightConnectionShape': {
      newExport: 'RightConnectionShape',
      newPath: 'Blockly.zelos.RightConnectionShape',
    },
    'Blockly.zelos.TopRow': {
      newExport: 'TopRow',
      newPath: 'Blockly.zelos.TopRow',
    },
    'Blockly.zelos.ConstantProvider': {
      newExport: 'ConstantProvider',
      newPath: 'Blockly.zelos.ConstantProvider',
    },
    'Blockly.zelos.Drawer': {
      newExport: 'Drawer',
      newPath: 'Blockly.zelos.Drawer',
    },
    'Blockly.zelos.RenderInfo': {
      newExport: 'RenderInfo',
      newPath: 'Blockly.zelos.RenderInfo',
    },
    'Blockly.zelos.MarkerSvg': {
      newExport: 'MarkerSvg',
      newPath: 'Blockly.zelos.MarkerSvg',
    },
    'Blockly.zelos.PathObject': {
      newExport: 'PathObject',
      newPath: 'Blockly.zelos.PathObject',
    },
    'Blockly.zelos.Renderer': {
      newExport: 'Renderer',
      newPath: 'Blockly.zelos.Renderer',
    },
    'Blockly.Themes.Classic': {
      newExport: 'Classic',
      newPath: 'Blockly.Themes.Classic',
    },
    'Blockly.Themes.Zelos': {
      newExport: 'Zelos',
      newPath: 'Blockly.Themes.Zelos',
    },
    'Blockly.ToolboxCategory': {
      newExport: 'ToolboxCategory',
      newPath: 'Blockly.ToolboxCategory',
    },
    'Blockly.CollapsibleToolboxCategory': {
      newExport: 'CollapsibleToolboxCategory',
      newPath: 'Blockly.CollapsibleToolboxCategory',
    },
    'Blockly.ToolboxSeparator': {
      newExport: 'ToolboxSeparator',
      newPath: 'Blockly.ToolboxSeparator',
    },
    'Blockly.Toolbox': {
      newExport: 'Toolbox',
      newPath: 'Blockly.Toolbox',
    },
    'Blockly.ToolboxItem': {
      newExport: 'ToolboxItem',
      newPath: 'Blockly.ToolboxItem',
    },
    'Blockly.utils.Coordinate': {
      newExport: 'Coordinate',
      newPath: 'Blockly.utils.Coordinate',
    },
    'Blockly.utils.KeyCodes': {
      newExport: 'KeyCodes',
      newPath: 'Blockly.utils.KeyCodes',
    },
    'Blockly.utils.Metrics': {
      newExport: 'Metrics',
      newPath: 'Blockly.utils.Metrics',
    },
    'Blockly.utils.Rect': {
      newExport: 'Rect',
      newPath: 'Blockly.utils.Rect',
    },
    'Blockly.utils.Size': {
      newExport: 'Size',
      newPath: 'Blockly.utils.Size',
    },
    'Blockly.utils.Svg': {
      newExport: 'Svg',
      newPath: 'Blockly.utils.Svg',
    },
    'Blockly.BlocklyOptions': {
      newExport: 'BlocklyOptions',
      newPath: 'Blockly.BlocklyOptions',
    },
    'Blockly.Bubble': {
      newExport: 'Bubble',
      newPath: 'Blockly.Bubble',
    },
    'Blockly.BubbleDragger': {
      newExport: 'BubbleDragger',
      newPath: 'Blockly.BubbleDragger',
    },
    'Blockly.Comment': {
      newExport: 'Comment',
      newPath: 'Blockly.Comment',
    },
    'Blockly.ComponentManager': {
      newExport: 'ComponentManager',
      newPath: 'Blockly.ComponentManager',
    },
    'Blockly.Connection': {
      newExport: 'Connection',
      newPath: 'Blockly.Connection',
    },
    'Blockly.ConnectionChecker': {
      newExport: 'ConnectionChecker',
      newPath: 'Blockly.ConnectionChecker',
    },
    'Blockly.ConnectionDB': {
      newExport: 'ConnectionDB',
      newPath: 'Blockly.ConnectionDB',
    },
    'Blockly.ContextMenuRegistry': {
      newExport: 'ContextMenuRegistry',
      newPath: 'Blockly.ContextMenuRegistry',
    },
    'Blockly.DeleteArea': {
      newExport: 'DeleteArea',
      newPath: 'Blockly.DeleteArea',
    },
    'Blockly.DragTarget': {
      newExport: 'DragTarget',
      newPath: 'Blockly.DragTarget',
    },
    'Blockly.DropDownDiv': {
      newExport: 'DropDownDiv',
      newPath: 'Blockly.DropDownDiv',
    },
    'Blockly.Field': {
      newExport: 'Field',
      newPath: 'Blockly.Field',
    },
    'Blockly.FieldAngle': {
      newExport: 'FieldAngle',
      newPath: 'Blockly.FieldAngle',
    },
    'Blockly.FieldCheckbox': {
      newExport: 'FieldCheckbox',
      newPath: 'Blockly.FieldCheckbox',
    },
    'Blockly.FieldColour': {
      newExport: 'FieldColour',
      newPath: 'Blockly.FieldColour',
    },
    'Blockly.FieldDropdown': {
      newExport: 'FieldDropdown',
      newPath: 'Blockly.FieldDropdown',
    },
    'Blockly.FieldImage': {
      newExport: 'FieldImage',
      newPath: 'Blockly.FieldImage',
    },
    'Blockly.FieldLabel': {
      newExport: 'FieldLabel',
      newPath: 'Blockly.FieldLabel',
    },
    'Blockly.FieldLabelSerializable': {
      newExport: 'FieldLabelSerializable',
      newPath: 'Blockly.FieldLabelSerializable',
    },
    'Blockly.FieldMultilineInput': {
      newExport: 'FieldMultilineInput',
      newPath: 'Blockly.FieldMultilineInput',
    },
    'Blockly.FieldNumber': {
      newExport: 'FieldNumber',
      newPath: 'Blockly.FieldNumber',
    },
    'Blockly.FieldTextInput': {
      newExport: 'FieldTextInput',
      newPath: 'Blockly.FieldTextInput',
    },
    'Blockly.FieldVariable': {
      newExport: 'FieldVariable',
      newPath: 'Blockly.FieldVariable',
    },
    'Blockly.Flyout': {
      newExport: 'Flyout',
      newPath: 'Blockly.Flyout',
    },
    'Blockly.FlyoutButton': {
      newExport: 'FlyoutButton',
      newPath: 'Blockly.FlyoutButton',
    },
    'Blockly.HorizontalFlyout': {
      newExport: 'HorizontalFlyout',
      newPath: 'Blockly.HorizontalFlyout',
    },
    'Blockly.FlyoutMetricsManager': {
      newExport: 'FlyoutMetricsManager',
      newPath: 'Blockly.FlyoutMetricsManager',
    },
    'Blockly.VerticalFlyout': {
      newExport: 'VerticalFlyout',
      newPath: 'Blockly.VerticalFlyout',
    },
    'Blockly.Generator': {
      newExport: 'Generator',
      newPath: 'Blockly.Generator',
    },
    'Blockly.Gesture': {
      newExport: 'Gesture',
      newPath: 'Blockly.Gesture',
    },
    'Blockly.Grid': {
      newExport: 'Grid',
      newPath: 'Blockly.Grid',
    },
    'Blockly.Icon': {
      newExport: 'Icon',
      newPath: 'Blockly.Icon',
    },
    'Blockly.inject': {
      newExport: 'inject',
      newPath: 'Blockly.inject',
    },
    'Blockly.Input': {
      newExport: 'Input',
      newPath: 'Blockly.Input',
    },
    'Blockly.inputTypes': {
      newExport: 'inputTypes',
      newPath: 'Blockly.inputTypes',
    },
    'Blockly.InsertionMarkerManager': {
      newExport: 'InsertionMarkerManager',
      newPath: 'Blockly.InsertionMarkerManager',
    },
    'Blockly.MarkerManager': {
      newExport: 'MarkerManager',
      newPath: 'Blockly.MarkerManager',
    },
    'Blockly.Menu': {
      newExport: 'Menu',
      newPath: 'Blockly.Menu',
    },
    'Blockly.MenuItem': {
      newExport: 'MenuItem',
      newPath: 'Blockly.MenuItem',
    },
    'Blockly.MetricsManager': {
      newExport: 'MetricsManager',
      newPath: 'Blockly.MetricsManager',
    },
    'Blockly.Msg': {
      newExport: 'Msg',
      newPath: 'Blockly.Msg',
    },
    'Blockly.Mutator': {
      newExport: 'Mutator',
      newPath: 'Blockly.Mutator',
    },
    'Blockly.Names': {
      newExport: 'Names',
      newPath: 'Blockly.Names',
    },
    'Blockly.Options': {
      newExport: 'Options',
      newPath: 'Blockly.Options',
    },
    'Blockly.RenderedConnection': {
      newExport: 'RenderedConnection',
      newPath: 'Blockly.RenderedConnection',
    },
    'Blockly.Scrollbar': {
      newExport: 'Scrollbar',
      newPath: 'Blockly.Scrollbar',
    },
    'Blockly.ScrollbarPair': {
      newExport: 'ScrollbarPair',
      newPath: 'Blockly.ScrollbarPair',
    },
    'Blockly.ShortcutRegistry': {
      newExport: 'ShortcutRegistry',
      newPath: 'Blockly.ShortcutRegistry',
    },
    'Blockly.Theme': {
      newExport: 'Theme',
      newPath: 'Blockly.Theme',
    },
    'Blockly.ThemeManager': {
      newExport: 'ThemeManager',
      newPath: 'Blockly.ThemeManager',
    },
    'Blockly.TouchGesture': {
      newExport: 'TouchGesture',
      newPath: 'Blockly.TouchGesture',
    },
    'Blockly.Trashcan': {
      newExport: 'Trashcan',
      newPath: 'Blockly.Trashcan',
    },
    'Blockly.VariableMap': {
      newExport: 'VariableMap',
      newPath: 'Blockly.VariableMap',
    },
    'Blockly.VariableModel': {
      newExport: 'VariableModel',
      newPath: 'Blockly.VariableModel',
    },
    'Blockly.Warning': {
      newExport: 'Warning',
      newPath: 'Blockly.Warning',
    },
    'Blockly.Workspace': {
      newExport: 'Workspace',
      newPath: 'Blockly.Workspace',
    },
    'Blockly.WorkspaceAudio': {
      newExport: 'WorkspaceAudio',
      newPath: 'Blockly.WorkspaceAudio',
    },
    'Blockly.WorkspaceComment': {
      newExport: 'WorkspaceComment',
      newPath: 'Blockly.WorkspaceComment',
    },
    'Blockly.WorkspaceCommentSvg': {
      newExport: 'WorkspaceCommentSvg',
      newPath: 'Blockly.WorkspaceCommentSvg',
    },
    'Blockly.WorkspaceDragSurfaceSvg': {
      newExport: 'WorkspaceDragSurfaceSvg',
      newPath: 'Blockly.WorkspaceDragSurfaceSvg',
    },
    'Blockly.WorkspaceDragger': {
      newExport: 'WorkspaceDragger',
      newPath: 'Blockly.WorkspaceDragger',
    },
    'Blockly.WorkspaceSvg': {
      newExport: 'WorkspaceSvg',
      newPath: 'Blockly.WorkspaceSvg',
    },
    'Blockly.ZoomControls': {
      newExport: 'ZoomControls',
      newPath: 'Blockly.ZoomControls',
    },
    'Blockly': {
      exports: {
        svgSize: {newModule: 'Blockly.utils.svgMath'},
        resizeSvgContents: {newModule: 'Blockly.WorkspaecSvg'},
        defineBlocksWithJsonArray: {newModule: 'Blockly.common'},
        isNumber: {newModule: 'Blockly.utils.string'},
      },
    },
  },
  '7.20211209.0': {
    'Blockly': {
      exports: {
        DRAG_RADIUS: {
          newModule: 'Blockly.config',
          newExport: 'config.dragRadius',
        },
        FLYOUT_DRAG_RADIUS: {
          newModule: 'Blockly.config',
          newExport: 'config.flyoutDragRadius',
        },
        SNAP_RADIUS: {
          newModule: 'Blockly.config',
          newExport: 'config.snapRadius',
        },
        CONNECTING_SNAP_RADIUS: {
          newModule: 'Blockly.config',
          newExport: 'config.connectingSnapRadius',
        },
        CURRENT_CONNECTION_PREFERENCE: {
          newModule: 'Blockly.config',
          newExport: 'config.currentConnectionPreference',
        },
        BUMP_DELAY: {
          newModule: 'Blockly.config',
          newExport: 'config.bumpDelay',
        },
        SPRITE: {
          newModule: 'Blockly.constants',
        },
      },
    },
    'Blockly.blocks.all': {
      newName: 'Blockly.libraryBlocks',
    },
    'Blockly.blocks.colour': {
      newName: 'Blockly.libraryBlocks.colour',
    },
    'Blockly.blocks.lists': {
      newName: 'Blockly.libraryBlocks.lists',
    },
    'Blockly.blocks.logic': {
      newName: 'Blockly.libraryBlocks.logic',
    },
    'Blockly.blocks.loops': {
      newName: 'Blockly.libraryBlocks.loops',
    },
    'Blockly.blocks.math': {
      newName: 'Blockly.libraryBlocks.math',
    },
    'Blockly.blocks.procedures': {
      newName: 'Blockly.libraryBlocks.procedures',
    },
    'Blockly.blocks.text': {
      newName: 'Blockly.libraryBlocks.text',
    },
    'Blockly.blocks.variables': {
      newName: 'Blockly.libraryBlocks.variables',
    },
    'Blockly.blocks.variablesDynamic': {
      newName: 'Blockly.libraryBlocks.variablesDynamic',
    },
  },
}
